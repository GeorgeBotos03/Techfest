# version: "3.9"  # opțional; poți lăsa comentat ca să nu mai apară warning-ul

services:
  api:
    build: ./backend
    container_name: anti-scam-api
    env_file:
      - .env
    environment:
      # ML artifacts persistente în volum
      - ML_ART_DIR=/data/ml
      # ---- din .env (le expunem explicit către container) ----
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ENV=${ENV}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app # codul backend montat în container
      - ./ml_artifacts:/data/ml # artefacte model/vectorizer/meta persistă pe disc

  db:
    image: postgres:16
    container_name: anti-scam-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432" # poți comenta dacă e ocupat; nu e necesar pt. demo
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/seed:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    container_name: anti-scam-redis
    # fără ports -> vizibil doar în rețeaua compose (api se conectează la 'redis:6379')

volumes:
  pgdata:
