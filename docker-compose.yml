version: "3.9"

services:
  api:
    build: ./backend
    container_name: anti-scam-api
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app

  db:
    image: postgres:16
    container_name: anti-scam-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # poți comenta portul dacă 5432 e ocupat; nu e necesar pt. demo
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/seed:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    container_name: anti-scam-redis
    # fără ports -> disponibil doar în rețeaua Compose (api îl vede ca 'redis:6379')
  txgen:
    build: ./fraud-ai
    container_name: fraud-ai-txgen
    depends_on:
      - api
    command: >
      python realtime_tx_gen.py
        --endpoint http://api:8000/scorePayment
        --rate 1.0
        --duration 0
        --mule-prob 0.15
        --risky-prob 0.30
        --first-prob 0.50
        --cop-match-prob 0.5
    restart: unless-stopped

  fraud-ai:
    build:
      context: ./fraud-ai
      dockerfile: Dockerfile
    container_name: fraud-ai-batch
    depends_on:
      - api
    environment:
      - ALERT_MIN_OUTLIERS=1
    volumes:
      - ./fraud-ai/output:/app/output
    command: ["python","detect.py",
              "--input","data/transactions.csv",
              "--outdir","output",
              "--contamination","0.08",
              "--post-to","http://api:8000/scorePayment"]

volumes:
  pgdata:
